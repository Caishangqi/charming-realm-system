plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "io.freefair.lombok" version "6.5.0.3"
}

shadowJar {
    archiveBaseName.set('charmrealm')
    archiveClassifier.set('')
    archiveVersion.set(version)
    relocate 'org.reflections', 'com.caizii.charmrealm.lib.reflections'
    dependencies {
        include(dependency('org.reflections:reflections'))
    }
}

build.dependsOn shadowJar


group = 'com.caizii.charmrealm'
description = 'Realm system solution that provide each player a individual private world'
version = '2.3.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "placeholderapi"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        name = "PlayerPoints"
        url = 'https://repo.rosewooddev.io/repository/public/'
    }

    maven {
        name = "ProtocolLib"
        url = 'https://repo.dmulloy2.net/repository/public/'
    }


    maven {
        name = "VaultAPI"
        url = "https://jitpack.io"
    }

    maven {
        name = "WorldEdit"
        url = "https://maven.enginehub.org/repo/"
    }

    maven {
        name = "EngineHub"
        url = uri("https://maven.enginehub.org/repo/")
    }

    maven {
        name = "FAWE"
        url = uri("https://mvnrepository.com/repos/central")
    }

    // item-nbt-api
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }

    //slf4s
    maven {
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }

    //HikariCP
    maven {
        url = uri("https://mvnrepository.com/repos/central")
    }

    mavenCentral()

}

dependencies {

    compileOnly("org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'
    compileOnly 'org.black_ixx:playerpoints:3.2.7'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:6.0'
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.13.1")
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.0.0";
    implementation "net.kyori:adventure-api:4.17.0"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"
    implementation 'org.reflections:reflections:0.10.2'

    implementation group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'
    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-healthchecks
    implementation group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: '3.1.0'
    // https://mvnrepository.com/artifact/io.dropwizard.metrics/metrics-core
    implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: '4.1.0'
    // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.13.2'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.13'
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.32.Final'
    // https://mvnrepository.com/artifact/io.prometheus/simpleclient
    implementation group: 'io.prometheus', name: 'simpleclient', version: '0.16.0'


    compileOnly fileTree(dir: 'libs/compile', include: ['*.jar'])
    implementation fileTree(dir: 'libs/implement', include: ['*.jar'])
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
}
